// <auto-generated />
using MagicVilla_VillaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla_VillaAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250605193851_Init data")]
    partial class Initdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVilla_VillaAPI.Models.Dto.VillaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sqft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "Pool, WiFi, Breakfast",
                            Details = "A luxurious villa with stunning views.",
                            ImageUrl = "https://example.com/royal-villa.jpg",
                            Name = "Royal Villa",
                            Occupancy = 4,
                            Rate = "200",
                            Sqft = "1500"
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "Pool, WiFi, Breakfast, Spa",
                            Details = "A beautiful villa right on the beach.",
                            ImageUrl = "https://example.com/beachfront-villa.jpg",
                            Name = "Beachfront Villa",
                            Occupancy = 6,
                            Rate = "300",
                            Sqft = "2000"
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "WiFi, Breakfast",
                            Details = "A cozy villa in the mountains.",
                            ImageUrl = "https://example.com/mountain-retreat.jpg",
                            Name = "Mountain Retreat",
                            Occupancy = 2,
                            Rate = "150",
                            Sqft = "800"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
